#+TITLE: TIL-Emacs
#+AUTHOR: Abhinav Tushar
#+EMAIL: abhinav.tushar.vs@gmail.com

/Today I learned, Emacs version. More of a mini blog. Inspired by
[[https://github.com/jbranchaud/til][jbranchaud/til]]./

+ *lexical scoping*

  Adding ~;;; -*- lexical-binding: t -*-~ to the header enables lexical binding
  in an elisp source file.

+ *inserting unicode by name*

  ~C-x 8 RET~ lets you search and insert unicode character by Unicode name.

+ *getting mouse position*

  There are functions to get current position of mouse both in terms of
  pixels ~mouse-pixel-position~ and characters ~mouse-position~ relative to
  current frame (or absolute ~mouse-absolute-pixel-position~).

+ *smerge*

  ~smerge-mode~ allows easy conflict resolution for merges. Move pointer to the
  conflict and use ~smerge-keep-mine~ / ~smerge-keep-other~.

+ *edit file properties in dired*

  Dired allows a special mode, wdired (~C-x C-q~), that lets dired buffer
  editings -- like renaming files, changing permissions, etc. -- get reflected
  to the file system. More details [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Wdired.html#Wdired][here]].

+ *external functions in org tables*

  Any babel code block returning value can be referenced by its ~name~ and
  called as a function for org tables. More details [[http://ehneilsen.net/notebook/orgExamples/org-examples.html#sec-8][here]].

+ *form feed lines*

  Many popular elisp source files get rendered in spacemacs with sections
  separated by neat horizontal lines. TIL those are form feed characters ~^L~
  and are rendered using packages like [[https://github.com/purcell/page-break-lines][page-break-lines]].

+ *kill-ring*

  Recently stopped using CUA keybindings. This opened me up to use the
  kill-ring, which is a list with kill (cut, copy) history. Simple cut, copy,
  paste are ~C-w~ (/kill/), ~M-w~ (/kill-save/) and ~C-y~ (/yank/). Cycle
  through the ring while yanking using ~M-y~. Use ~helm-show-kill-ring~ for a
  better kill-ring browsing experience.

+ *elisp scripts*
  
  Using Emacs for general purpose scripting has multiple issues. Many are
  documented [[http://www.lunaryorn.com/posts/emacs-script-pitfalls.html#section-inhibiting-site-start][here]]. For me, package loading is a major one. A lot of
  /not-inside-emacs/ scripts wont be helpful without packages like [[https://github.com/rejeep/f.el][f]], [[https://github.com/magnars/dash.el][dash]] and
  [[https://github.com/magnars/s.el][s]]. [[https://github.com/cask/cask][cask]] provides a way out. Init a caskfile (~cask init~), install
  dependencies (~cask install~), run (~cask emacs --script something.el~).

+ *data structures*

  I never went beyond list. Knew about [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Association-Lists.html][alists]], but didn't know there are
  [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Hash-Tables.html][hash tables]] and [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Vectors.html][vectors]] too. In case you are working with key-value pairs in
  either hash table or alist form, try [[https://github.com/Wilfred/ht.el][ht.el]].

+ *org-contacts*

  You can use [[https://julien.danjou.info/projects/emacs-packages#org-contacts][org-contacts]] from org-contrib to manage contacts. This is really
  neat considering it integrates with gnus.

+ *mpc*

  There is a pretty nifty [[https://www.musicpd.org/][mpd]] client built into Emacs. Use ~M-x mpc~.
